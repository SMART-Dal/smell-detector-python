<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="ANALYZE_INJECTED_CODE" value="false" />
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="0dcf20a4-42e8-45bf-bd91-538bd88e9538" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/requirements.txt" beforeDir="false" afterPath="$PROJECT_DIR$/requirements.txt" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Unit Test" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="develop" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;akaVagh&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="30638b91-b073-4cc7-991f-868326cdb69a" />
        <option name="url" value="https://github.com/SMART-Dal/smell-detector-python.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/src/main.py" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2Yd0Rt9sUkmLUFkYCnAddCbnziC" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Python tests.Python tests for test_ast_parser.test_parse.executor": "Run",
    "Python tests.Python tests for test_ast_parser.test_visit_ClassDef.executor": "Run",
    "Python tests.Python tests for test_ast_parser.test_visit_FunctionDef.executor": "Run",
    "Python tests.Python tests for test_ast_parser.test_visit_Import.executor": "Run",
    "Python tests.Python tests for test_complex_conditional_detector.test_detect_complex_conditionals.executor": "Run",
    "Python tests.Python tests for test_complex_conditional_detector.test_detect_complex_conditionals_in_analyze_data.executor": "Run",
    "Python tests.Python tests for test_config_loader.test_load_config_with_invalid_json.executor": "Run",
    "Python tests.Python tests for test_config_loader.test_load_default_config_file_not_found.executor": "Run",
    "Python tests.Python tests for test_config_loader.test_load_default_config_success.executor": "Run",
    "Python tests.Python tests for test_config_loader.test_load_user_config.executor": "Run",
    "Python tests.Python tests for test_config_loader.test_load_user_config_overrides_default.executor": "Run",
    "Python tests.Python tests for test_log_config.test_ensure_log_directory_creation_failure.executor": "Run",
    "Python tests.Python tests for test_log_config.test_ensure_log_directory_exists_success.executor": "Run",
    "Python tests.Python tests for test_log_config.test_setup_logging_file_handler.executor": "Run",
    "Python tests.Python tests for test_py_project.test_add_module.executor": "Run",
    "Python tests.Python tests for test_py_project.test_add_package.executor": "Run",
    "Python tests.Python tests for test_py_project.test_analyze_project.executor": "Run",
    "Python tests.Python tests for test_py_project.test_find_class_found.executor": "Run",
    "Python tests.Python tests for test_py_project.test_find_class_not_found.executor": "Run",
    "Python tests.Python tests for test_sm_function.test_smfunction_initialization.executor": "Run",
    "Python tests.Python tests for test_sm_module.test_add_function.executor": "Run",
    "Python tests.Python tests for test_sm_module.test_analyze.executor": "Run",
    "Python tests.Python tests for test_sm_project.test_add_body_statement.executor": "Run",
    "Python tests.Python tests for test_sm_project.test_add_parameter.executor": "Run",
    "Python tests.Python tests for test_sm_project.test_smfunction_initialization.executor": "Run",
    "Python tests.Python tests for test_smell_detector.test_iterate_functions_and_methods_error_handling.executor": "Run",
    "Python tests.Python tests in test_ast_parser.py.executor": "Run",
    "Python tests.Python tests in test_ast_utils.py.executor": "Run",
    "Python tests.Python tests in test_complex_conditional_detector.py.executor": "Run",
    "Python tests.Python tests in test_config_loader.py.executor": "Run",
    "Python tests.Python tests in test_dependency_graph.py.executor": "Run",
    "Python tests.Python tests in test_hierarchy_graph.py.executor": "Run",
    "Python tests.Python tests in test_log_config.py.executor": "Run",
    "Python tests.Python tests in test_py_project.py.executor": "Run",
    "Python tests.Python tests in test_sm_class.py.executor": "Run",
    "Python tests.Python tests in test_sm_function.py.executor": "Run",
    "Python tests.Python tests in test_sm_import.py.executor": "Run",
    "Python tests.Python tests in test_sm_method.py.executor": "Run",
    "Python tests.Python tests in test_sm_module.py.executor": "Run",
    "Python tests.Python tests in test_sm_package.py.executor": "Run",
    "Python tests.Python tests in test_sm_parameter.py.executor": "Run",
    "Python tests.Python tests in test_sm_project.py.executor": "Run",
    "Python tests.Python tests in test_smell_detector.py.executor": "Run",
    "Python.main-ip-1-csv.executor": "Run",
    "Python.main-ip-1.executor": "Run",
    "Python.main-ip-2-csv.executor": "Run",
    "Python.main-ip-2.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "deletionFromPopupRequiresConfirmation": "false",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "E:/DAL/Project/smell-detector-python/test/src",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "run.code.analysis.last.selected.profile": "aDefault",
    "settings.editor.selected.configurable": "com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="E:\DAL\Project\smell-detector-python\smells" />
      <recent name="E:\DAL\Project\smell-detector-python\test" />
      <recent name="E:\DAL\Project\smell-detector-python\test\sourcemodel" />
      <recent name="E:\DAL\Project\smell-detector-python\sourcemodel" />
      <recent name="E:\DAL\Project\smell-detector-python\test\metrics" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="E:\DAL\Project\smell-detector-python\test\src" />
      <recent name="E:\DAL\Project\smell-detector-python\src" />
      <recent name="E:\DAL\Project\smell-detector-python\test" />
      <recent name="E:\DAL\Project\smell-detector-python\smells" />
      <recent name="E:\DAL\Project\smell-detector-python" />
    </key>
  </component>
  <component name="RunManager" selected="Python tests.Python tests for test_cc.test_cyclomatic_complexity_with_logical_operators">
    <configuration name="main-ip-1-csv" type="PythonConfigurationType" factoryName="Python">
      <module name="PyCodeSmells" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="SDK_NAME" value="Python 3.10 (smell-detector-python)" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/src/main.py" />
      <option name="PARAMETERS" value="-i E:\DAL\Project\SublimeWebInspector-ST3 -o E:\DAL\Project\Output -f csv" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="main-ip-2-csv" type="PythonConfigurationType" factoryName="Python">
      <module name="PyCodeSmells" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
        <env name="ENVIRONMENT" value="development" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="SDK_NAME" value="Python 3.10 (smell-detector-python)" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/src/main.py" />
      <option name="PARAMETERS" value="-i E:\DAL\Project\input_1 -o E:\DAL\Project\Output -f csv" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="main-ip-2" type="PythonConfigurationType" factoryName="Python">
      <module name="PyCodeSmells" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="SDK_NAME" value="Python 3.10 (smell-detector-python)" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/src/main.py" />
      <option name="PARAMETERS" value="-i E:\DAL\Project\input_1 -o E:\DAL\Project\Output -f json" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_cc.test_cyclomatic_complexity_with_logical_operators" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="PyCodeSmells" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/metrics" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_cc.test_cyclomatic_complexity_with_logical_operators&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_cc.test_cyclomatic_complexity_with_multiple_controls" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="PyCodeSmells" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/metrics" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_cc.test_cyclomatic_complexity_with_multiple_controls&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_wmc.test_weighted_methods_class_with_only_docstrings" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="PyCodeSmells" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/metrics" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_wmc.test_weighted_methods_class_with_only_docstrings&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_wmc.test_weighted_methods_empty_class" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="PyCodeSmells" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/metrics" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_wmc.test_weighted_methods_empty_class&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_wmc.test_weighted_methods_with_complex_methods" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="PyCodeSmells" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/metrics" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_wmc.test_weighted_methods_with_complex_methods&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Python.main-ip-1-csv" />
      <item itemvalue="Python.main-ip-2" />
      <item itemvalue="Python.main-ip-2-csv" />
      <item itemvalue="Python tests.Python tests for test_cc.test_cyclomatic_complexity_with_logical_operators" />
      <item itemvalue="Python tests.Python tests for test_cc.test_cyclomatic_complexity_with_multiple_controls" />
      <item itemvalue="Python tests.Python tests for test_wmc.test_weighted_methods_class_with_only_docstrings" />
      <item itemvalue="Python tests.Python tests for test_wmc.test_weighted_methods_empty_class" />
      <item itemvalue="Python tests.Python tests for test_wmc.test_weighted_methods_with_complex_methods" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Python tests for test_wmc.test_weighted_methods_with_complex_methods" />
        <item itemvalue="Python tests.Python tests for test_wmc.test_weighted_methods_empty_class" />
        <item itemvalue="Python tests.Python tests for test_wmc.test_weighted_methods_class_with_only_docstrings" />
        <item itemvalue="Python tests.Python tests for test_cc.test_cyclomatic_complexity_with_multiple_controls" />
        <item itemvalue="Python tests.Python tests for test_cc.test_cyclomatic_complexity_with_logical_operators" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-7a29c1521ef0-c986f194a52a-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-233.11799.298" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="0dcf20a4-42e8-45bf-bd91-538bd88e9538" name="Changes" comment="" />
      <created>1700840154966</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1700840154966</updated>
      <workItem from="1700840158414" duration="7607000" />
      <workItem from="1701461595475" duration="1858000" />
      <workItem from="1701659372139" duration="7672000" />
      <workItem from="1701880944182" duration="25536000" />
      <workItem from="1702361047486" duration="22823000" />
      <workItem from="1702525354728" duration="31702000" />
      <workItem from="1702775643387" duration="6916000" />
      <workItem from="1702791845974" duration="176611000" />
      <workItem from="1703336621026" duration="568000" />
      <workItem from="1703337203962" duration="2111000" />
      <workItem from="1703339351708" duration="1683000" />
      <workItem from="1703358200003" duration="18607000" />
      <workItem from="1703388563418" duration="534000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/smell_detector_python$main_ip_2.coverage" NAME="main-ip-2 Coverage Results" MODIFIED="1703339601546" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/smell_detector_python$main.coverage" NAME="main Coverage Results" MODIFIED="1702433572902" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/smell_detector_python$main_ip_1_csv.coverage" NAME="main-ip-1-csv Coverage Results" MODIFIED="1703305923517" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/smell_detector_python$main_ip_1.coverage" NAME="main-ip-1 Coverage Results" MODIFIED="1703241364869" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/smell_detector_python$main_ip_2_csv.coverage" NAME="main-ip-2-csv Coverage Results" MODIFIED="1703386335158" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/smell_detector_python$.coverage" NAME=" Coverage Results" MODIFIED="1703388270458" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/test/src/sourcemodel" />
  </component>
</project>